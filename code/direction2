# import packages
import pandas as pd  # data processing
import matplotlib.pyplot as plt  # visualization
import seaborn as sns  # visualization
# loading the csv file
df = pd.read_csv('./CVD_cleaned.csv', header=0)
# displaying the first few rows
df.head()
# checking the data tpyes
df.info()
# Checking for null/missing values
df.isnull().sum()
# filtering patients with heart disease
df_heart = df[df['Heart_Disease'] == 'Yes']
df_heart.head()
# general health and heart disease
plt.figure(figsize=(12,6))
sns.countplot(data=df, x='General_Health', hue='Heart_Disease', order=['Excellent', 'Very Good', 'Good', 'Fair', 'Poor'])
plt.title('General health and heart disease')
plt.xlabel('General health')
plt.ylabel('Numbers')
plt.legend(title='Heart disease')
plt.tight_layout()
plt.savefig('./general_health_heart.png', dpi=400, bbox_inches='tight')
plt.show()
# general health and heart disease
df_health_heart = df[['General_Health', 'Heart_Disease']]
general_health = ['Excellent', 'Very Good', 'Good', 'Fair', 'Poor']

fig,ax = plt.subplots(nrows=2, ncols=3, figsize=(16, 12))
for i, health in enumerate(general_health):
    row, col = divmod(i, 3)

    health_df = df_health_heart[df_health_heart['General_Health'] == health]
    heart_counts = health_df['Heart_Disease'].value_counts()

    ax[row,col].pie(heart_counts, labels=heart_counts.index, autopct='%1.1f%%', startangle=90)
    ax[row,col].set_title(f'Health status: {health}')
fig.suptitle('General health and heart disease')
plt.tight_layout()
plt.subplots_adjust(top=0.95)
ax[1,2].remove()
fig.savefig('health_heart_pie.png', dpi=400, bbox_inches='tight')
plt.show()
# exercise and heart disease
sns.countplot(x = 'Exercise', data = df, hue  = 'Heart_Disease')
plt.title('Exercise and heart disease')
plt.legend(title='Heart disease')
plt.ylabel('Numbers')
plt.tight_layout()
plt.savefig('./exercise_heart.png', dpi=400, bbox_inches='tight')
plt.show()
# checkup and heart disease
checkup_order = ['Within the past year', 'Within the past 2 years', 'Within the past 5 years', '5 or more years ago', 'Never']

sns.countplot(data=df, x='Checkup', hue='Heart_Disease', order=checkup_order)
plt.xticks(rotation=90)
plt.savefig('./checkup_heart.png', dpi=400, bbox_inches='tight')
plt.show()
# the relationship between heart disease and medical  history
med_heart = ['Heart_Disease', 'Skin_Cancer', 'Other_Cancer', 'Depression', 'Diabetes', 'Arthritis']
df_med_heart = df[med_heart]

fig, axes = plt.subplots(nrows=2, ncols=3, figsize=(18, 12))

for i, condition in enumerate(med_heart[1:]):
    row, col = divmod(i, 3)
    ct_med = pd.crosstab(df_med_heart['Heart_Disease'], df_med_heart[condition])

    sns.heatmap(ct_med, annot=True, cmap='coolwarm', fmt='d', cbar_kws={'format': '%.0f'}, ax=axes[row, col])
    axes[row, col].set_title(f'Relationship between heart disease and {condition.replace("_", " ").lower()}')
    axes[row, col].set_xlabel(condition.replace("_", " ").capitalize())
    axes[row, col].set_ylabel('Heart disease')

axes[1, 1].set_xticklabels(axes[1,1].get_xticklabels(), rotation=15, ha='right')
fig.suptitle('Relationships between heart disease and medical history', fontsize=16)
axes[1, 0].set_xticklabels(axes[1,0].get_xticklabels(), rotation=15, ha='right')
plt.tight_layout()
axes[1,2].remove()
fig.savefig('./heart_med.png', dpi=400, bbox_inches='tight')
plt.show()
# general health and checkup
sns.countplot(x='General_Health', data=df, hue='Checkup', hue_order=checkup_order, order=general_health)
plt.xlabel('General health')
plt.ylabel('Numbers')
plt.title('General health and checkup')
plt.tight_layout()
plt.savefig('./health_checkup.png', dpi=400, bbox_inches='tight')
plt.show()
# general health and heart disease
df_health_ex = df[['General_Health', 'Exercise']]

fig,ax = plt.subplots(nrows=2, ncols=3, figsize=(16, 12))
for i, health in enumerate(general_health):
    row, col = divmod(i, 3)

    health_df = df_health_ex[df_health_ex['General_Health'] == health]
    ex_counts = health_df['Exercise'].value_counts()

    ax[row,col].pie(ex_counts, labels=ex_counts.index, autopct='%1.1f%%', startangle=90)
    ax[row,col].set_title(f'Health status: {health}')
fig.suptitle('General health and exercise')
plt.tight_layout()
plt.subplots_adjust(top=0.95)
ax[1,2].remove()
fig.savefig('./health_ex.png', dpi=400, bbox_inches='tight')
plt.show()
# correlation in all individuals
df.replace({'Yes': 1, 'No': 0}, inplace=True)
df['Sex'] = df['Sex'].map({'Male': 0, 'Female': 1})
df['Age_Category'] = df['Age_Category'].astype('category')
df['Age_Category'] = df['Age_Category'].cat.codes
plt.figure(figsize=(15,10))
sns.heatmap(df.corr(), annot = True, cmap = 'coolwarm')
plt.title('Correlation among all individuals')
plt.savefig('./corr_all.png', dpi=400, bbox_inches='tight')
plt.show()
# correlation among individuals with heart disease
df_heart.replace({'Yes': 1, 'No': 0}, inplace=True)
df_heart['Sex'] = df_heart['Sex'].map({'Male': 0, 'Female': 1})
df_heart['Age_Category'] = df_heart['Age_Category'].astype('category')
df_heart['Age_Category'] = df_heart['Age_Category'].cat.codes

correlation_matrix = df_heart.corr()
correlation_matrix = correlation_matrix.drop('Heart_Disease', axis=0)
correlation_matrix = correlation_matrix.drop('Heart_Disease', axis=1)

plt.figure(figsize=(15,10))
sns.heatmap(correlation_matrix, annot=True, cmap='coolwarm')
plt.title('Correlation among individuals with heart disease')
plt.savefig('./corr_heart.png', dpi=400, bbox_inches='tight')
plt.show()
